{"compress":true,"commitItems":[["ae181cce-7e6b-490c-ae1e-d93609b4c363",1558698890047,"---\ntitle: 搭建Hexo博客之后\ndate: 2017-07-15 14:59:11\ntags: [知识碎片]\n---\n\n这几天在公司实习，用着公司的电脑，划水的时候想着更新一下博客，然后问题来了：博客的相关文件都在自家电脑没拷来，莫不是要重新搭一个环境？？那我部署之后岂不是之前的都被覆盖了？？？\n然后突然觉得这丫的好像换电脑更新有点小问题呀就开始百度解决。\n恩，然后找到了方法，然而感觉讲的太！不！清！楚！\n折腾了半天，终于弄好了，以下整理了一下步骤：\n\n## 使用分支方法解决hexo博客无法在两台电脑上更新的问题\n\n### 创建本地仓库\n\n首先，创建一个新的文件夹，和github上的仓库同名：`username.github.io`\n然后开始创建本地仓库，以下是创建一个新的本地仓库的git指令\n```git\n$ touch README.md\n$ git init \n$ git add README.md\n$ git commit -m \"first commit\"\n$ git remote add origin 你的项目地址\n$ git push -u origin master\n```\n在执行push指令的时候可能会报错，让你先pull，这里可以执行以下命令解决\n```git\n$ git pull --rebase origin master\n$ git push -u origin master\n```\n这样就可以将本地仓库里的文件更新到github仓库啦~\\(≧▽≦)/~\n\n### 创建hexo分支\n\n```git\n$ git branch hexo\n$ git push origin hexo\n```\n这样这个博客仓库中就多了一条分支，我们就准备将hexo一些必要文件传在这个分支中，这样换电脑的时候就可以直接克隆这个项目的文件，麻麻再也不用担心我换电脑或者把博客数据搞丢了~~\n\n### 在hexo分支中安装hexo\n\n```git\n$ git checkout hexo\n$ npm install hexo\n$ hexo init\n$ npm install\n```\n这样我们就在hexo分支中安装好了hexo，然后你就会发现这个文件夹不是本地仓库了（不懂为什么hexo有这种设定），于是我们需要安装一个插件让hexo支持可以上传到github上\n原文中提供的安装方法好像不管用，重新找了个名字叫[hexo-git-backup](https://github.com/coneycode/hexo-git-backup)\n安装指令：\n```git\n$ npm install hexo-git-backup --save\n```\n\n### 配置_config.yml文件\n\n打开_config.yml文件，拉到最下，我们需要改动一些东西\n```yml\ndeploy:\n\ttype: git #部署类型，使用github\n\trepository: #你的项目地址\n\tbranch: master #部署分支，必须是master\n\tmessage: update #默认类型\n\n#我们还需要添加那个插件的功能\nbackup:\n\ttype: git\n\trepository:\n\t\tgithub: 项目地址,hexo #将这个本地仓库更新到hexo分支\n```\n然后我们在执行一下指令\n```git\n$ hexo g \n$ hexo d //部署博客\n$ hexo b //将hexo文件中的更改提交到hexo分支\n```\n然后，事情就完美的解决啦~~\n\n### 更换电脑后的操作\n\n* 使用`git clone`将远程仓库克隆到本地\n* 在本地的仓库执行`npm install hexo`、`npm install`、`npm install hexo-git-backup --save`，就完成了更换电脑更新的操作啦（记得，不需要`hexo init`这条指令）。\n\n",[[1558698885178,["70431@DESKTOP-QB0HG1K",[[1,267,"\n"]],[265,265],[266,266]]],[1558698885476,["70431@DESKTOP-QB0HG1K",[[1,268,"\n"]],[266,266],[267,267]]],[1558698886267,["70431@DESKTOP-QB0HG1K",[[-1,268,"\n"]],[267,267],[266,266]]],[1558698887210,["70431@DESKTOP-QB0HG1K",[[-1,267,"\n"]],[266,266],[265,265]]],[1558698888604,["70431@DESKTOP-QB0HG1K",[[1,235,"\n"]],[233,233],[234,234]]],[1558698888919,["70431@DESKTOP-QB0HG1K",[[1,236,"\n"]],[234,234],[235,235]]],[1558698889281,["70431@DESKTOP-QB0HG1K",[[1,235,"<!-- more -->"]],[235,235],[248,248]]]],null,"70431@DESKTOP-QB0HG1K"],["dbe61c99-9501-4416-a8fa-dd6bccbd6ed7",1558699270440,"---\ntitle: 搭建Hexo博客之后\ndate: 2017-07-15 14:59:11\ntags: [知识碎片]\n---\n\n这几天在公司实习，用着公司的电脑，划水的时候想着更新一下博客，然后问题来了：博客的相关文件都在自家电脑没拷来，莫不是要重新搭一个环境？？那我部署之后岂不是之前的都被覆盖了？？？\n然后突然觉得这丫的好像换电脑更新有点小问题呀就开始百度解决。\n恩，然后找到了方法，然而感觉讲的太！不！清！楚！\n折腾了半天，终于弄好了，以下整理了一下步骤：\n\n<!-- more -->\n\n## 使用分支方法解决hexo博客无法在两台电脑上更新的问题\n\n### 创建本地仓库\n\n首先，创建一个新的文件夹，和github上的仓库同名：`username.github.io`\n然后开始创建本地仓库，以下是创建一个新的本地仓库的git指令\n```git\n$ touch README.md\n$ git init \n$ git add README.md\n$ git commit -m \"first commit\"\n$ git remote add origin 你的项目地址\n$ git push -u origin master\n```\n在执行push指令的时候可能会报错，让你先pull，这里可以执行以下命令解决\n```git\n$ git pull --rebase origin master\n$ git push -u origin master\n```\n这样就可以将本地仓库里的文件更新到github仓库啦~\\(≧▽≦)/~\n\n### 创建hexo分支\n\n```git\n$ git branch hexo\n$ git push origin hexo\n```\n这样这个博客仓库中就多了一条分支，我们就准备将hexo一些必要文件传在这个分支中，这样换电脑的时候就可以直接克隆这个项目的文件，麻麻再也不用担心我换电脑或者把博客数据搞丢了~~\n\n### 在hexo分支中安装hexo\n\n```git\n$ git checkout hexo\n$ npm install hexo\n$ hexo init\n$ npm install\n```\n这样我们就在hexo分支中安装好了hexo，然后你就会发现这个文件夹不是本地仓库了（不懂为什么hexo有这种设定），于是我们需要安装一个插件让hexo支持可以上传到github上\n原文中提供的安装方法好像不管用，重新找了个名字叫[hexo-git-backup](https://github.com/coneycode/hexo-git-backup)\n安装指令：\n```git\n$ npm install hexo-git-backup --save\n```\n\n### 配置_config.yml文件\n\n打开_config.yml文件，拉到最下，我们需要改动一些东西\n```yml\ndeploy:\n\ttype: git #部署类型，使用github\n\trepository: #你的项目地址\n\tbranch: master #部署分支，必须是master\n\tmessage: update #默认类型\n\n#我们还需要添加那个插件的功能\nbackup:\n\ttype: git\n\trepository:\n\t\tgithub: 项目地址,hexo #将这个本地仓库更新到hexo分支\n```\n然后我们在执行一下指令\n```git\n$ hexo g \n$ hexo d //部署博客\n$ hexo b //将hexo文件中的更改提交到hexo分支\n```\n然后，事情就完美的解决啦~~\n\n### 更换电脑后的操作\n\n* 使用`git clone`将远程仓库克隆到本地\n* 在本地的仓库执行`npm install hexo`、`npm install`、`npm install hexo-git-backup --save`，就完成了更换电脑更新的操作啦（记得，不需要`hexo init`这条指令）。\n\n",[[1558699254900,["70431@DESKTOP-QB0HG1K",[[-1,54,"[知识碎片]"]],[54,60],[54,54]]],[1558699255850,["70431@DESKTOP-QB0HG1K",[[1,55,"\n"]],[54,54],[55,55]]],[1558699259252,["70431@DESKTOP-QB0HG1K",[[1,55,"  - hexo"]],[55,55],[63,63]]],[1558699262504,["70431@DESKTOP-QB0HG1K",[[1,48,"\n"]],[47,47],[48,48]]],[1558699265934,["70431@DESKTOP-QB0HG1K",[[1,48,"categories: z"]],[48,48],[61,61]]],[1558699266448,["70431@DESKTOP-QB0HG1K",[[-1,60,"z"]],[61,61],[60,60]]],[1558699269975,["70431@DESKTOP-QB0HG1K",[[1,60,"知识碎片"]],[60,60],[64,64]]]],null,"70431@DESKTOP-QB0HG1K"],["9a70a317-58b3-4d02-8a4c-3c45218c7866",1558699712634,"---\ntitle: 搭建Hexo博客之后\ndate: 2017-07-15 14:59:11\ncategories: 知识碎片\ntags: \n  - hexo\n---\n\n这几天在公司实习，用着公司的电脑，划水的时候想着更新一下博客，然后问题来了：博客的相关文件都在自家电脑没拷来，莫不是要重新搭一个环境？？那我部署之后岂不是之前的都被覆盖了？？？\n然后突然觉得这丫的好像换电脑更新有点小问题呀就开始百度解决。\n恩，然后找到了方法，然而感觉讲的太！不！清！楚！\n折腾了半天，终于弄好了，以下整理了一下步骤：\n\n<!-- more -->\n\n## 使用分支方法解决hexo博客无法在两台电脑上更新的问题\n\n### 创建本地仓库\n\n首先，创建一个新的文件夹，和github上的仓库同名：`username.github.io`\n然后开始创建本地仓库，以下是创建一个新的本地仓库的git指令\n```git\n$ touch README.md\n$ git init \n$ git add README.md\n$ git commit -m \"first commit\"\n$ git remote add origin 你的项目地址\n$ git push -u origin master\n```\n在执行push指令的时候可能会报错，让你先pull，这里可以执行以下命令解决\n```git\n$ git pull --rebase origin master\n$ git push -u origin master\n```\n这样就可以将本地仓库里的文件更新到github仓库啦~\\(≧▽≦)/~\n\n### 创建hexo分支\n\n```git\n$ git branch hexo\n$ git push origin hexo\n```\n这样这个博客仓库中就多了一条分支，我们就准备将hexo一些必要文件传在这个分支中，这样换电脑的时候就可以直接克隆这个项目的文件，麻麻再也不用担心我换电脑或者把博客数据搞丢了~~\n\n### 在hexo分支中安装hexo\n\n```git\n$ git checkout hexo\n$ npm install hexo\n$ hexo init\n$ npm install\n```\n这样我们就在hexo分支中安装好了hexo，然后你就会发现这个文件夹不是本地仓库了（不懂为什么hexo有这种设定），于是我们需要安装一个插件让hexo支持可以上传到github上\n原文中提供的安装方法好像不管用，重新找了个名字叫[hexo-git-backup](https://github.com/coneycode/hexo-git-backup)\n安装指令：\n```git\n$ npm install hexo-git-backup --save\n```\n\n### 配置_config.yml文件\n\n打开_config.yml文件，拉到最下，我们需要改动一些东西\n```yml\ndeploy:\n\ttype: git #部署类型，使用github\n\trepository: #你的项目地址\n\tbranch: master #部署分支，必须是master\n\tmessage: update #默认类型\n\n#我们还需要添加那个插件的功能\nbackup:\n\ttype: git\n\trepository:\n\t\tgithub: 项目地址,hexo #将这个本地仓库更新到hexo分支\n```\n然后我们在执行一下指令\n```git\n$ hexo g \n$ hexo d //部署博客\n$ hexo b //将hexo文件中的更改提交到hexo分支\n```\n然后，事情就完美的解决啦~~\n\n### 更换电脑后的操作\n\n* 使用`git clone`将远程仓库克隆到本地\n* 在本地的仓库执行`npm install hexo`、`npm install`、`npm install hexo-git-backup --save`，就完成了更换电脑更新的操作啦（记得，不需要`hexo init`这条指令）。\n\n",[[1558699705942,["70431@DESKTOP-QB0HG1K",[[1,85,"这几天在公司实习，用着公司的电脑，划水的时候想着更新一下博客，然后问题来了：博客的相关文件都在自家电脑没拷来，莫不是要重新搭一个环境？？那我部署之后岂不是之前的都被覆盖了？？？\n然后突然觉得这丫的好像换电脑更新有点小问题呀就开始百度解决。\n恩，然后找到了方法，然而感觉讲的太！不！清！楚！\n折腾了半天，终于弄好了，以下整理了一下步骤：\n\n<!-- more -->"]],[85,85],[267,267]]],[1558699706683,["70431@DESKTOP-QB0HG1K",[[1,268,"\n"]],[267,267],[268,268]]],[1558699710307,["70431@DESKTOP-QB0HG1K",[[-1,438,"<!-- more -->"]],[451,451],[438,438]]],[1558699710508,["70431@DESKTOP-QB0HG1K",[[-1,439,"\n"]],[438,438],[437,437]]],[1558699710959,["70431@DESKTOP-QB0HG1K",[[-1,438,"\n"]],[437,437],[436,436]]]],null,"70431@DESKTOP-QB0HG1K"]]}